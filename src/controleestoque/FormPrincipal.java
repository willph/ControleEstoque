/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * FormPrincipal.java
 *
 * Created on 29/03/2012, 10:47:50
 */
package controleestoque;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.print.PrinterException;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Professor
 */
public class FormPrincipal extends javax.swing.JFrame {

    ArrayList<Produto> listaProdutos;
    FormAlterarProduto alterarProduto;
    FormNovoUsuario novoUsuario;

    /**
     * Creates new form FormPrincipal
     *
     * @param privilegio
     */
    public FormPrincipal(String privilegio) {

        initComponents();
        atualizarLinhas();
        if (!Login.permitidoParaAdministrador()) {
            jButtonNovoUsuario.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldID = new javax.swing.JTextField();
        jTextFieldNome = new javax.swing.JTextField();
        jButtonCadastrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonListar = new javax.swing.JButton();
        jButtonNovoUsuario = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldDescricao = new javax.swing.JTextField();
        jLabeID = new javax.swing.JLabel();
        jTextFieldPreco = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1Arquivo = new javax.swing.JMenu();
        jMenuItemGerarRelatorio = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Controle De Estoque - Copyright © ®");
        setLocation(new java.awt.Point(300, 50));

        jTextFieldID.setEnabled(false);

        jTextFieldNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNomeKeyReleased(evt);
            }
        });

        jButtonCadastrar.setText("Cadastrar");
        jButtonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Título 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButtonListar.setText("Limpar");
        jButtonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jButtonNovoUsuario.setText("Novo usuário");
        jButtonNovoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoUsuarioActionPerformed(evt);
            }
        });

        jLabel1.setText("Preço:");

        jLabel2.setText("Nome:");

        jLabel3.setText("Descrição:");

        jTextFieldDescricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldDescricaoKeyReleased(evt);
            }
        });

        jLabeID.setText("ID:");

        jButtonBuscar.setText("Consultar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jButton1.setText("Logoff");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1Arquivo.setText("Arquivo");

        jMenuItemGerarRelatorio.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemGerarRelatorio.setText("Gerar Relatorio");
        jMenuItemGerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGerarRelatorioActionPerformed(evt);
            }
        });
        jMenu1Arquivo.add(jMenuItemGerarRelatorio);

        jMenuBar1.add(jMenu1Arquivo);

        jMenu2.setText("Imprimir");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonNovoUsuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabeID)
                                            .addGap(35, 35, 35))
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldNome)
                                    .addComponent(jTextFieldDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonBuscar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonCadastrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonListar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabeID)
                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButtonBuscar))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCadastrar)
                    .addComponent(jButtonListar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNovoUsuario)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrarActionPerformed

        Produto produto1 = new Produto(jTextFieldNome.getText(), Double.valueOf(jTextFieldPreco.getText()),
                0, jTextFieldDescricao.getText());

        DadosProduto dados = new DadosProduto();
        dados.cadastrar(produto1, this);
        JOptionPane.showMessageDialog(rootPane, "Produto cadastrado");
        clearFields();
    }//GEN-LAST:event_jButtonCadastrarActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        clearFields();
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void jMenuItemGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGerarRelatorioActionPerformed
        DadosProduto dados = new DadosProduto();
        dados.gerarRelatorio();
    }//GEN-LAST:event_jMenuItemGerarRelatorioActionPerformed


    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:

        selectTableRow();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked

        imprimir();
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        atualizarLinhas();
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jTextFieldNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomeKeyReleased
        // TODO add your handling code here:
        jTextFieldNome.setText(jTextFieldNome.getText().toUpperCase(Locale.CANADA));
    }//GEN-LAST:event_jTextFieldNomeKeyReleased

    private void jTextFieldDescricaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDescricaoKeyReleased
        // TODO add your handling code here:
        jTextFieldDescricao.setText(jTextFieldDescricao.getText().toUpperCase(Locale.CANADA));
    }//GEN-LAST:event_jTextFieldDescricaoKeyReleased

    private void jButtonNovoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoUsuarioActionPerformed
        // TODO add your handling code here:
        if (novoUsuario == null) {
            novoUsuario = new FormNovoUsuario(this);
        }
        novoUsuario.setVisible(true);
    }//GEN-LAST:event_jButtonNovoUsuarioActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        fechar();
        new FormLogin().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCadastrar;
    private javax.swing.JButton jButtonListar;
    private javax.swing.JButton jButtonNovoUsuario;
    private javax.swing.JLabel jLabeID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1Arquivo;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemGerarRelatorio;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldDescricao;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldPreco;
    // End of variables declaration//GEN-END:variables

    private void clearFields() {
        jTextFieldID.setText("");
        jTextFieldNome.setText("");
        jTextFieldPreco.setText("");
        jTextFieldDescricao.setText("");
    }

    private void fechar() {
        WindowEvent windowsfechar = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(windowsfechar);
    }
    
    public void atualizarLinhas(){
        try {
            DadosProduto dados = new DadosProduto();
            this.listaProdutos = dados.listar();
            DefaultTableModel modelo = new DefaultTableModel();
            //atribuindo as colunas da tabela
            modelo.setColumnIdentifiers(new String[]{"ID", "Nome", "Preço", "Quantidade", "Descrição"});
            for (int i = 0; i < this.listaProdutos.size(); i++) {
                Produto p = this.listaProdutos.get(i);
                modelo.addRow(new String[]{String.valueOf(p.getId()), p.getNome(), "R$ "
                    + String.valueOf(p.getPreco()), "" + p.getQuantidade(), p.getDescricao()});
            }
            jTable1.setModel(modelo);
//            jTable1.setDefaultEditor(Object.class, null);
            jTable1.setRowSorter(new TableRowSorter<>(modelo));
//            TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(jTable1.getModel());
//            jTable1.setRowSorter(sorter);
//            List<RowSorter.SortKey> sortKeys = new ArrayList<>(25);
//            sortKeys.add(new RowSorter.SortKey(4, SortOrder.ASCENDING));
//            sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
//            sorter.setSortKeys(sortKeys);
        } catch (Exception ex) {
            Logger.getLogger(FormPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void selectTableRow() {
//        int index = jTable1.getSelectedRow();
//        TableModel model = jTable1.getModel();
        
        int column = 0;
        int row = jTable1.getSelectedRow();
        row = jTable1.convertRowIndexToModel(row);
        String value = jTable1.getModel().getValueAt(row, column).toString();
        DadosProduto dados = new DadosProduto();
        Produto produto = dados.getProdutoByID(Integer.valueOf(value));
        if (alterarProduto == null) {
            alterarProduto = new FormAlterarProduto(this, produto);
        }
        alterarProduto.getjTextFieldID().setText(String.valueOf(produto.getId()));
        alterarProduto.getjTextFieldNome().setText(produto.getNome());
        alterarProduto.getjTextFieldPreco().setText(String.valueOf(produto.getPreco()));
        alterarProduto.getjTextFieldQuantidade().setText(String.valueOf(produto.getQuantidade()));
        alterarProduto.getjTextFieldDescricao().setText(produto.getDescricao());
        alterarProduto.setVisible(true);

//        jTextFieldID.setText(""+p.getId());
//        jTextFieldNome.setText(p.getNome());
//        jTextFieldPreco.setText(preco.replace("R$ ", ""));
//        jTextFieldQuantidade.setText(quantidade);
//        jTextFieldDescricao.setText(descricao);
        
//        int column = 0;
//        int row = jTable1.getSelectedRow();
//        String value = jTable1.getModel().getValueAt(row, column).toString();
//        jTextFieldID.setText(value);
    }

    private void imprimir() {
        MessageFormat header = new MessageFormat("Controle de Estoque");
        MessageFormat footer = new MessageFormat("Pagina {0,number,integer}");

        try {
            // TODO add your handling code here:

            jTable1.print(JTable.PrintMode.FIT_WIDTH, header, footer);

            /*Boolean printdata = jTable1.print();
            
            if(printdata){
                JOptionPane.showMessageDialog(null, "Impressão terminada");
            }else{
                JOptionPane.showMessageDialog(null, "Imprimindo...");
            }*/
        } catch (PrinterException ex) {
            //System.err.format("Impressora não encontrada %s%n", ex.getMessage());
            Logger.getLogger(FormPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
